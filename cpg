#! /bin/bash

if [ ! -d ~/.cpg ]; then
  mkdir ~/.cpg
  cat << EOS > ~/.cpg/Makefile
all: build test
build:
	g++ -std=gnu++1y a.cc -lm
test
	bash t.sh
EOS

  cat << EOS > ~/.cpg/t.sh
#! /bin/bash

for i in `seq 10000`
do
  t=tests/test$i
  a=tests/ans$i
  if [ ! -f $t ]; then
    exit
  fi

  echo "test$i"
  cat $t

  echo
  echo "-----"

  expect=`cat $a`
  echo expected answer:
  echo $expect
  
  actual=`./a.out < "$t"`
  echo actual answer:
  echo $actual

  if [ ! -z "$actual" ] && [ "$expect" = "$actual" ]; then
    echo -e '\e[32mok\e[m'
  else
    echo -e '\e[31mFAIL\e[m'
  fi
done
EOS

  cat << EOS2 > ~/.cpg/a.cc
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <cstdio>
#include <cmath>
#include <utility>

using namespace std;

using ll = long long;
using p = pair<ll, ll>;

int main(void) {
  
  return 0;
}
EOS2
fi

MAKEFILE=~/.cpg/Makefile
CXX=~/.cpg/a.cc
T=~/.cpg/t.sh

dir=`pwd`
name=$1

if [ -z $name ]; then
  echo "cpg contest-name"
  exit 1
fi

for i in a b c d e f g h i j; do
  d=$dir/$name/$i
  mkdir -p $d/tests
  for j in `seq 3`; do
    touch $d/tests/test$j
    touch $d/tests/ans$j
  done
  cp $MAKEFILE $d/
  cp $CXX $d/
  cp $T $d/
done
